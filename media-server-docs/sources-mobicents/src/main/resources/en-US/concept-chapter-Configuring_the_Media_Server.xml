<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- chapter id nickname: ctms -->
<chapter id="ctms-Configuring_the_Media_Server">
	<title>Configuring the Media Server</title>

	<para>
		<!--After the Media Server has successfully started, you can then locate the JMX console at <ulink
			url="http://localhost:8080/jmx-console"/> in the default distribution. Note that if you have configured the servlet container (for example, Tomcat) to service a different port, then you will need to supply a different port number in the URL.-->
		All endpoints are plugged as POJO service in JBoss
		Microcontainers. To create a component for the Media Server, the
		appropriate component Factory must be used. Each component
		within a factory has an identifier and name that is unique
		across the server implementation. Because each component is
		unique in the Media Server, it can be referenced and pulled into
		other applications.
	</para>

	<!--<mediaobject
		id="mediaobj-mms-MMSConfiguration-ss-JMXConsole.gif">
		<imageobject>
		<imagedata
		align="center"
		width="700"
		fileref="images/mms-MMSConfiguration-ss-JMXConsole.gif"
		format="GIF" />
		</imageobject>
		</mediaobject>-->

	<section>
		<title>Timer</title>

		<para>
			The Timer provides a time source, and functions similar to a
			crystal oscillator. This endpoint can be configured to
			specify the millisecond interval between two oscillations.
		</para>

		<para>The configurable aspect of the Timer is:</para>

		<variablelist>
			<varlistentry>
				<term>heartBeat</term>

				<listitem>
					<para>
						Time interval (in milliseconds) between two
						subsequent oscillations.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section>
		<title>MainDeployer</title>

		<para>
			The MainDeployer endpoint manages hot deployment of
			components and enpoints. Hot-deployable components and
			endpoints are defined as those that can be added to or
			removed from the running server.
		</para>

		<para>
			MainDeployer scans the
			<filename>/deploy</filename>
			directory, looking for configuration files that have changed
			since the last scan. When MainDeployer detects any changes
			to the directory, any changes resulting from the removed
			configuration file are processed. This includes re-deploying
			changed beans, adding new beans, or removing beans that are
			no longer required.
		</para>

		<para>
			To understand the functionality of the MainDeployer
			endpoint, experiment by removing the
			<filename>ann-beans.xml</filename>
			configuration file from the
			<filename>/deploy</filename>
			directory while the server is running. Observe how the
			server behaves once the file is removed from the folder.
		</para>

		<para>The configurable aspects of MainDeployer are:</para>

		<variablelist>
			<varlistentry>
				<term>path</term>

				<listitem>
					<para>
						Specifies the location of the configuration XML
						files. Generally, this is the /deploy directory.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>scanPeriod</term>

				<listitem>
					<para>
						Specifies the time (in milliseconds) that
						MainDeployer checks the specified path for
						changes to the directory.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>fileFilter</term>

				<listitem>
					<para>
						Specifies the file extensions that will be
						deployed or monitored. Supported file extensions
						are -beans.xml and -conf.xml
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section id="ctms-RTPFactory">
		<title>RTPFactory</title>

		<para>
			<literal>RTPFactory</literal>
			is responsible for managing the actual RTP Socket. The
			reference of
			<literal>RTPFactory</literal>
			is passed to each endpoint which, in turn, leverage the
			<literal>RTPFactory</literal>
			to create Connections and decide on supported codecs.
		</para>

		<!--TODO - This example must be updated with the new parameters and structure for the MainDeployer-->

		<para>The configurable aspects of the RTPFactory are:</para>

		<variablelist>
			<varlistentry>
				<term>formatMap</term>

				<listitem>
					<para>
						Specifies the relationship between the RTP
						payload type and format.
						<xref linkend="ctms-Supported_RTP_Formats" />
						describes the payload types and their supported
						formats.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>bindAddress</term>

				<listitem>
					<para>
						Specifies the IP address to which the RTP socket
						is bound.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>portRange</term>

				<listitem>
					<para>
						Specifies the port range within which the RTP
						socket will be created. The first free port in
						the given range is assigned to the socket.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>jitter</term>

				<listitem>
					<para>
						Specifies the size of the jitter buffer (in
						milliseconds) for incoming packets.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>timer</term>

				<listitem>
					<para>
						Specifies the timer instance from which reading
						process is synchronized.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>stunAddress</term>

				<listitem>
					<para>
						Specifies the location of the STUN server to
						use. For more information regarding STUN, refer
						to
						<xref linkend="ctms-MMS_STUN_Support" />
						.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<formalpara>
			<title>Supported RTP Formats</title>

			<para>
				The
				<literal>RTPFactory</literal>
				is able to receive the following RTP media types:
			</para>
		</formalpara>

		<table frame="all" id="ctms-Supported_RTP_Formats">
			<title>Supported RTP Formats</title>

			<tgroup align="left" cols="4" colsep="1" rowsep="1">
				<colspec colname="col1" colnum="1" />

				<colspec colname="col2" colnum="2" />

				<colspec colname="col3" colnum="3" />

				<colspec colname="col4" colnum="4" />

				<thead>
					<row>
						<entry>Payload Type</entry>

						<entry>Format</entry>

						<entry>Specification</entry>

						<entry>Description</entry>
					</row>
				</thead>

				<tbody>
					<row>
						<entry>0</entry>

						<entry>PCMU</entry>

						<entry>
							<ulink
								url="http://www.ietf.org/rfc/rfc1890.txt">
								RFC 1890
							</ulink>
						</entry>

						<entry>ITU G.711 U-law audio</entry>
					</row>

					<row>
						<entry>3</entry>

						<entry>GSM</entry>

						<entry>
							<ulink
								url="http://www.ietf.org/rfc/rfc1890.txt">
								RFC 1890
							</ulink>
						</entry>

						<entry>GSM full-rate audio</entry>
					</row>

					<row>
						<entry>8</entry>

						<entry>PCMA</entry>

						<entry>
							<ulink
								url="http://www.ietf.org/rfc/rfc1890.txt">
								RFC 1890
							</ulink>
						</entry>

						<entry>ITU G.711 A-law audio</entry>
					</row>

					<row>
						<entry>18</entry>

						<entry>G729</entry>

						<entry>N/A</entry>

						<entry>G.729 audio</entry>
					</row>

					<row>
						<entry>31</entry>

						<entry>H.261</entry>

						<entry>N/A</entry>

						<entry>Video</entry>
					</row>

					<row>
						<entry>97</entry>

						<entry>SPEEX</entry>

						<entry>N/A</entry>

						<entry>Speex narrow band audio</entry>
					</row>

					<row>
						<entry>101</entry>

						<entry>DTMF</entry>

						<entry>
							<ulink
								url="http://www.ietf.org/rfc/rfc2893.txt">
								RFC 2893
							</ulink>
						</entry>

						<entry>
							Dual-tone Multi-frequency (DTMF) Events
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</section>


	<section id="ctms-Digital_Signaling_Processors">
		<title>Digital Signal Processor (DSP)</title>

		<para>The configurable aspect of the DspFactory are:</para>

		<variablelist>
			<varlistentry>
				<term>name</term>
				<listitem>
					<para>The name of the processor</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>CodecFactories</term>
				<listitem>
					<para>The list of codecs</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section id="ctms-Audio_Player">
		<title>Audio Player</title>

		<para>
			The configurable aspect of the AudioPlayerFactory are:
		</para>

		<variablelist>
			<varlistentry>
				<term>name</term>
				<listitem>
					<para>The name of the Audio Player</para>
				</listitem>
			</varlistentry>

		</variablelist>
	</section>


	<section id="ctms-Audio_Recorder">
		<title>Audio Recorder</title>

		<para>The configurable aspect of the RecorderFactory are:</para>

		<variablelist>
			<varlistentry>
				<term>name</term>
				<listitem>
					<para>The name of the Audio Recorder</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>recordDir</term>
				<listitem>
					<para>
						The location of recrodDir will be considered as
						parent and all the audio files recorded will go
						in this parent directory. The location specified
						by recordDir should be present in folder
						structure else Recorder will fail. It can be
						relative like '${mms.home.dir}' in which case
						all the recorded files will be stored in
						MMS_HOME or user can specify absolute value like
						'/home/user/workarea/myapp/recordedfiles' on
						linux and 'c:/workarea/myapp/recordedfiles' on
						windows
					</para>
				</listitem>
			</varlistentry>

		</variablelist>
	</section>


	<section id="ctms-Dtmf">
		<title>DTMF</title>

		<para>
			Two different types of components are used to handle inband
			and rfc2833 mode of detecting and generating DTMF tones.
		</para>


		<section id="ctms-Rfc2833_Detector">
			<title>Rfc2833 Detector</title>

			<para>
				The configurable aspects of the Rfc2833DetectorFactory
				are:
			</para>

			<variablelist>
				<varlistentry>
					<term>name</term>
					<listitem>
						<para>The name of the detector</para>
					</listitem>
				</varlistentry>



			</variablelist>
		</section>


		<section id="ctms-Inband_Detector">
			<title>Inband Detector</title>

			<para>
				The configurable aspects of the InbandDetectorFactory
				are:
			</para>

			<variablelist>
				<varlistentry>
					<term>name</term>
					<listitem>
						<para>The name of the detector</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>

		<section id="ctms-Rfc2833_Generator">
			<title>Rfc2833 Generator</title>

			<para>
				The configurable aspects of the Rfc2833GeneratorFactory
				are:
			</para>

			<variablelist>
				<varlistentry>
					<term>name</term>
					<listitem>
						<para>The name of the generator</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>

		<section id="ctms-Inband_Generator">
			<title>Inband Generator</title>

			<para>
				The configurable aspects of the InbandGeneratorFactory
				are:
			</para>

			<variablelist>
				<varlistentry>
					<term>name</term>
					<listitem>
						<para>The name of the generator</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>

	</section>

	<section id="ctms-Announcement_Server_Access_Points">
		<title>Announcement Server Access Points</title>

		<para>
			An Announcement Server endpoint provides access to an
			announcement service. Upon receiving requests from the call
			agent, an Announcement Server will
			<quote>play</quote>
			a specified announcement. A given announcement endpoint is
			not expected to support more than one connection at a time.
			Connections to an Announcement Server are typically one-way
			(
			<quote>half-duplex</quote>
			), therefore, the Announcement Server is not expected to
			listen to audio signals from the connection.
		</para>

		<para>
			Announcement endpoints do not transcode announced media; in
			order to achieve this, the application must use Packet Relay
			endpoints on the media path. Also note that the announcement
			server endpoint can generate a tone such as, for example,
			DTMF.
		</para>

		<formalpara>
			<title>
				Configuration of an Announcement Server Access Point
			</title>

			<para>
				The configurable attributes of the Announcement Server
				are as follows:
			</para>
		</formalpara>

		<variablelist>
			<varlistentry>
				<term>localName</term>

				<listitem>
					<para>
						Specifies the name under which the endpoint is
						to be bound.
					</para>

					<para>
						This parameter allows a set of enpoints to be
						specified, which are then created and bound
						automatically by the Announcement Server.
						Consider the scenario where a total of 10
						endpoints are required. To specify this in the
						attribute, the following path is provided:
						<literal>/media/aap/[1..10]</literal>
						. The
						<literal>[1..10]</literal>
						in the directory path tells the Announcement
						Server to create a set of 10 endpoints in the
						<literal>/aap</literal>
						directory, named according to the endpoint
						number, which start at one and finish at ten.
						For example,
						<literal>
							/media/aap/1, media/aap/2, ... media/aap/10
						</literal>
						.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>timer</term>

				<listitem>
					<para>
						Specifies the timer instance from which reading
						process is synchronized.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>sourceFactory</term>

				<listitem>
					<para>
						Specifies the Java bean responsible for
						generating the source media.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>sinkFactory</term>

				<listitem>
					<para>
						Specifies the Java bean responsible for using
						the source media generated by the
						<literal>sourceFactory</literal>
						bean.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>rtpFactory</term>

				<listitem>
					<para>
						Specifies the location of the RTP Factory. For
						more information about the RTP Factory, refer to
						<xref linkend="ctms-RTPFactory" />
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>txChannelFactory</term>

				<listitem>
					<para>
						Specifies the instance of the custom
						transmission channel factory.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>rxChannelFactory</term>

				<listitem>
					<para>
						Specifies the instance of the custom receiver
						channel factory.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section id="ctms-Interactive_Voice_Response">
		<title>Interactive Voice Response</title>

		<para>
			An Interactive Voice Response (
			<acronym>IVR</acronym>
			) endpoint provides access to an IVR service. Upon requests
			from the Call Agent, the IVR server
			<quote>plays</quote>
			announcements and tones, and
			<quote>listens</quote>
			to voice messages from the user. A given IVR endpoint is not
			expected to support more than one connection at a time. For
			example, if several connections were established to the same
			endpoint, then the same tones and announcements would be
			played simultaneously over all connections. IVR endpoints do
			not posses the capability of transcoding played or recorded
			media streams. IVRs record or play in the format that the
			data was delivered.
		</para>

		<example id="ctms-The_IVREndpointManagement_MBean">
			<title>The IVREndpointManagement MBean</title>

			<programlisting linenumbering="unnumbered" role="XML">
				&lt;mbean
				code="org.mobicents.media.server.impl.jmx.enp.ivr.IVRTrunkManagement"
				name="media.mobicents:endpoint=ivr"&gt;
				&lt;depends&gt;media.mobicents:service=RTPFactory,QID=1&lt;/depends&gt;
				&lt;attribute
				name="JndiName"&gt;media/trunk/IVR&lt;/attribute&gt;
				&lt;attribute
				name="RtpFactoryName"&gt;java:media/mobicents/protocol/RTP&lt;/attribute&gt;
				&lt;attribute
				name="MediaType"&gt;audio.x_wav&lt;/attribute&gt;
				&lt;!-- DtmfMode can be either RFC2833 or INBAND or AUTO
				--&gt; &lt;attribute
				name="DtmfMode"&gt;AUTO&lt;/attribute&gt; &lt;attribute
				name="RecordDir"&gt;${jboss.server.data.dir}&lt;/attribute&gt;
				&lt;attribute name="Channels"&gt;24&lt;/attribute&gt;
				&lt;/mbean&gt;
			</programlisting>
		</example>

		<formalpara>
			<title>
				Configuration of the Interactive Voice Response Endpoint
			</title>

			<para>
				The configurable attributes of the Interactive Voice
				Response endpoint are as follows:
			</para>
		</formalpara>

		<variablelist>
			<varlistentry>
				<term>JndiName</term>

				<listitem>
					<para>
						The Java Naming and Directory Interface (
						<acronym>JNDI</acronym>
						) name under which the endpoint is to be bound.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>RtpFactoryName</term>

				<listitem>
					<para>The JNDI name of RTPFactory.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>RecordDir</term>

				<listitem>
					<para>
						The directory where the recorded files should be
						created and stored.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>Channels</term>

				<listitem>
					<para>
						Controls the number of announcement endpoints
						available in the server instance , in an
						endpoints pool. Endpoints are not created
						dynamically. At any given time the number of
						endpoints in use can not exceed the
						<userinput>channels</userinput>
						value. It is not subject to change during
						runtime.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>MediaType</term>

				<listitem>
					<para>It currently defaults to WAV.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>DtmfMode</term>

				<listitem>
					<para>
						Controls DTMF detection mode. Possible values
						are:
						<userinput>RFC2833</userinput>
						,
						<userinput>INBAND</userinput>
						or
						<userinput>AUTO</userinput>
						.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<!--<varlistentry>
			<term>PacketizationPeriod</term>
			<listitem>
			<para>The period of media stream packetization in milliseconds.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMA</term>
			<listitem>
			<para>Enable or disable G711 (A-law) codec support.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMU</term>
			<listitem>
			<para>Enable or disable G711 (U-law) codec support.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>RecordDir</term>
			<listitem>
			<para>The directory where the recorded files should be created and stored.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>DTMF</term>
			<listitem>
			<para>The dual-tone multi-frequency (<acronym>DTMF</acronym>) type supported. By default it is set to AUTO, but you can also specify INBAND or RFC2833. Note that if you select RFC2833, you <emphasis>also</emphasis> need to specify the DTMF Paylod property. For example:</para>
			<programlisting
			linenumbering="unnumbered"
			role="XML"><![CDATA[
			<attribute
			name="DTMF">
			detector.mode=INBAND
			dtmf.payload = 101
			</attribute>]]></programlisting>
			<variablelist>
			<varlistentry>
			<term>detector.mode</term>
			<listitem>
			<para>Configures DTMF detector mode. Possible values are AUTO, INBAND or RFC2833.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>dtmf.payload</term>
			<listitem>
			<para>Configures the payload number if RFC2833 mode is specified.</para>
			</listitem>
			</varlistentry>
			</variablelist>
			</listitem>
			</varlistentry>
			</variablelist>-->

		<formalpara>
			<title>Supported Media Types and Formats</title>

			<para>
				The supported media types and formats are listed as
				follows:
			</para>
		</formalpara>

		<variablelist>
			<varlistentry>
				<term>WAVE (.wav)</term>

				<listitem>
					<para>16-bit mono/stereo linear</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<!--<formalpara>
			<title>Supported RTP Formats</title>
			<para>The endpoint is able to receive the follwing RTP media types:</para>
			</formalpara>
			<informaltable
			frame="all">
			<tgroup
			cols="2"
			align="left"
			colsep="1"
			rowsep="1">
			<colspec
			colnum="1"
			colname="col1"/>
			<colspec
			colnum="2"
			colname="col2"/>
			<thead>
			<row>
			<entry>Media Type</entry>
			<entry>Payload Number</entry>
			</row>
			</thead>
			<tbody>
			<row>
			<entry>Audio: G711 (A-law) 8bit, 8kHz</entry>
			<entry>8</entry>
			</row>
			<row>
			<entry>Audio: G711 (U-law) 8bit, 8kHz</entry>
			<entry>0</entry>
			</row>
			</tbody>
			</tgroup>
			</informaltable>-->

		<formalpara>
			<title>Record Directory Configuration</title>

			<para>
				You can specify the common directory where all the
				recorded files should be stored, or simply omit this
				attribute, in which case the default directory is null,
				and the application needs to pass an absolute directory
				path to record to.
			</para>
		</formalpara>

		<formalpara>
			<title>Supported Packages</title>

			<para>The supported packages are as follows:</para>
		</formalpara>

		<itemizedlist>
			<listitem>
				<para>
					<literal>
						org.mobicents.media.server.spi.events.Announcement
					</literal>
				</para>
			</listitem>

			<listitem>
				<para>
					<literal>
						org.mobicents.media.server.spi.events.Basic
					</literal>
				</para>
			</listitem>

			<listitem>
				<para>
					<literal>
						org.mobicents.media.server.spi.events.AU
					</literal>
				</para>
			</listitem>
		</itemizedlist>
	</section>

	<section id="ctms-Packet_Relay_Endpoint">
		<title>Packet Relay Endpoint</title>

		<para>
			A packet relay endpoint is a specific form of conference
			bridge that typically only supports two connections. Packet
			relays can be found in firewalls between a protected and an
			open network, or in transcoding servers used to provide
			interoperation between incompatible gateways (for example,
			gateways which do not support compatible compression
			algorithms, or gateways which operate over different
			transmission networks such as IP or ATM).
		</para>

		<example id="ctms-The_PREndpointManagement_MBean">
			<title>The PREndpointManagement MBean</title>

			<programlisting linenumbering="unnumbered" role="XML">
				&lt;mbean
				code="org.mobicents.media.server.impl.jmx.enp.prl.PRTrunkManagement"
				name="media.mobicents:endpoint=packet-relay"&gt;
				&lt;depends&gt;media.mobicents:service=RTPFactory,QID=1&lt;/depends&gt;
				&lt;attribute
				name="JndiName"&gt;media/trunk/PacketRelay&lt;/attribute&gt;
				&lt;attribute
				name="RtpFactoryName"&gt;java:media/mobicents/protocol/RTP&lt;/attribute&gt;
				&lt;attribute name="Channels"&gt;10&lt;/attribute&gt;
				&lt;/mbean&gt;
			</programlisting>
		</example>

		<formalpara>
			<title>Configuration of the Packet Relay Endpoint</title>

			<para>
				The configurable attributes of the Packet Relay endpoint
				are as follows:
			</para>
		</formalpara>

		<variablelist>
			<varlistentry>
				<term>JndiName</term>

				<listitem>
					<para>
						The JNDI name under which endpoint is to be
						bound.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>RtpFactoryName</term>

				<listitem>
					<para>
						The JNDI name of
						<literal>RTPFactory</literal>
						.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>Channels</term>

				<listitem>
					<para>
						Controls the number of announcement endpoints
						available in the server instance , in an
						endpoints pool. Endpoints are not created
						dynamically. At any given time, the number of
						endpoints in use cannot exceed the
						<userinput>channels</userinput>
						value. It is not subject to change during
						runtime.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<!--</varlistentry>
			<varlistentry>
			<term>Jitter</term>
			<listitem>
			<para>The size of jitter buffer in milliseconds.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PacketizationPeriod</term>
			<listitem>
			<para>The period of media stream packetization in milliseconds.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMA</term>
			<listitem>
			<para>Enable or disable G711 (A-law) codec support.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMU</term>
			<listitem>
			<para>Enable or disable G711 (U-law) codec support.</para>
			</listitem>
			</varlistentry>
			</variablelist>
			<formalpara>
			<title>Supported RTP Formats</title>
			<para>This endpoint is able to receive the follwing RTP media types:</para>
			</formalpara>
			<informaltable
			frame="all">
			<tgroup
			cols="2"
			align="left"
			colsep="1"
			rowsep="1">
			<colspec
			colnum="1"
			colname="col1"/>
			<colspec
			colnum="2"
			colname="col2"/>
			<thead>
			<row>
			<entry>Media Type</entry>
			<entry>Payload Number</entry>
			</row>
			</thead>
			<tbody>
			<row>
			<entry>Audio: G711 (A-law) 8bit, 8kHz</entry>
			<entry>8</entry>
			</row>
			<row>
			<entry>Audio: G711 (U-law) 8bit, 8kHz</entry>
			<entry>0</entry>
			</row>
			</tbody>
			</tgroup>
			</informaltable>
			<formalpara>
			<title>DTMF Configuration</title>
			<para>The dual-tone multi-frequency (<acronym>DTMF</acronym>) configuration is determined by the DTMF attribute. The properties are as follows:</para>
			</formalpara>
			<variablelist>
			<varlistentry>
			<term>detector.mode</term>
			<listitem>
			<para>Configures DTMF detector mode. Possible values are AUTO, INBAND or RFC2833.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>dtmf.payload</term>
			<listitem>
			<para>Configures the payload number <emphasis>if</emphasis> RFC2833 mode is <emphasis>also</emphasis> specified.</para>
			</listitem>
			</varlistentry>
			</variablelist>-->
	</section>

	<section id="ctms-Conference_Bridge_Endpoint">
		<title>Conference Bridge Endpoint</title>

		<para>
			The Mobicents Media Server should be able to establish
			several connections between the endpoint and packet
			networks, or between the endpoint and other endpoints in the
			same gateway. The signals originating from these connections
			shall be mixed according to the connection
			<quote>mode</quote>
			. The precise number of connections an endpoint supports is
			a characteristic of the gateway, and may in fact vary
			according with the allocation of resources within the
			gateway. The conf endpoint can play an announcement directly
			on connections and hence only for the participant listening
			to an announcement, and can even detect DTMF for connection.
		</para>

		<example id="ctms-The_ConfEndpointManagement_MBean">
			<title>The ConfEndpointManagement MBean</title>

			<programlisting linenumbering="unnumbered" role="XML">
				&lt;mbean
				code="org.mobicents.media.server.impl.jmx.enp.cnf.ConfTrunkManagement"
				name="media.mobicents:endpoint=conf"&gt;
				&lt;depends&gt;media.mobicents:service=RTPFactory,QID=1&lt;/depends&gt;
				&lt;attribute
				name="JndiName"&gt;media/trunk/Conference&lt;/attribute&gt;
				&lt;attribute name="RtpFactoryName"&gt;
				java:media/mobicents/protocol/RTP &lt;/attribute&gt;
				&lt;attribute name="Channels"&gt;10&lt;/attribute&gt;
				&lt;/mbean&gt;
			</programlisting>
		</example>

		<formalpara>
			<title>
				Configuration of the Conference Bridge Endpoint
			</title>

			<para>
				The configurable attributes of the Conference Bridge
				endpoint are as follows:
			</para>
		</formalpara>

		<variablelist>
			<varlistentry>
				<term>JndiName</term>

				<listitem>
					<para>
						The JNDI name under which endpoint is to be
						bound.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>RtpFactoryName</term>

				<listitem>
					<para>
						The JNDI name of
						<literal>RTPFactory</literal>
						.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>Channels</term>

				<listitem>
					<para>
						Controls the number of announcement endpoints
						available in the server instance, in an
						endpoints pool. Endpoints are not created
						dynamically. At any given time, the number of
						endpoints in use cannot exceed the
						<userinput>Channels</userinput>
						value. It is not subject to change during
						runtime.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<!--</varlistentry>
			<varlistentry>
			<term>Jitter</term>
			<listitem>
			<para>The size of jitter buffer in milliseconds.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PacketizationPeriod</term>
			<listitem>
			<para>The period of media stream packetization in milliseconds.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMA</term>
			<listitem>
			<para>Enable or disable G711 (A-law) codec support.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>PCMU</term>
			<listitem>
			<para>Enable or disable G711 (U-law) codec support.</para>
			</listitem>
			</varlistentry>
			</variablelist>
			<formalpara>
			<title>Supported RTP Formats</title>
			<para>This endpoint is able to receive the follwing RTP media  types:</para>
			</formalpara>
			<informaltable
			id="ctms-RTP_Formats_Supported_by_the_Conference_Bridge_Endpoint"
			frame="all">
			<tgroup
			cols="2"
			align="left"
			colsep="1"
			rowsep="1">
			<colspec
			colnum="1"
			colname="col1"/>
			<colspec
			colnum="2"
			colname="col2"/>
			<thead>
			<row>
			<entry>Media Type</entry>
			<entry>Payload Number</entry>
			</row>
			</thead>
			<tbody>
			<row>
			<entry>Audio: G711 (A-law) 8bit, 8kHz</entry>
			<entry>8</entry>
			</row>
			<row>
			<entry>Audio: G711 (U-law) 8bit, 8kHz</entry>
			<entry>0</entry>
			</row>
			</tbody>
			</tgroup>
			</informaltable>
			<formalpara>
			<title>DTMF Configuration</title>
			<para>The dual-tone multi-frequency (<acronym>DTMF</acronym>) configuration is determined by DTMF attribute. The properties are as follows:</para>
			</formalpara>
			<variablelist>
			<varlistentry>
			<term>detector.mode</term>
			<listitem>
			<para>Configures DTMF detector mode. Possible values are AUTO, INBAND or RFC2833.</para>
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>
			<literal>dtmf.payload</literal>
			</term>
			<listitem>
			<para>Configures DTMF detector mode. Possible values are AUTO, INBAND and RFC2833.</para>
			</listitem>
			</varlistentry>
			</variablelist>-->
	</section>

	<section id="ctms-MMS_STUN_Support">
		<title>MMS STUN Support</title>

		<para>
			When using Mobicents Media Server behind a routing device
			performing Network Address Translation, you may need to
			employ the Simple Traversal of User Datagram Protocol
			through Network Address Translators (abbreviated:
			<acronym>STUN</acronym>
			) protocol in order for the server to operate correctly. In
			general, it is recommended to avoid deploying the MMS behind
			a NAT, since doing so can incur significant performance
			penalties and failures. Nevertheless, the current MMS
			implementation does work with a static NAT, a.k.a. a
			one-to-one (1-1) NAT, in which no port-mapping occurs. Full
			Cone NAT should also work with Address-Restricted NAT.
		</para>

		<para>
			For more information STUN NAT classification, refer to
			chapter 5 of
			<ulink url="http://www.faqs.org/rfcs/rfc3489.html">
				RFC3489 - STUN - Simple Traversal of User Datagram
				Protocol (UDP)
			</ulink>
			.
		</para>

		<formalpara>
			<title>MMS STUN Configuration</title>

			<para>
				Each RTPFactory in the Media Server can have its own
				STUN preferences. The STUN options are specified in the
				<filename>jboss-service.xml</filename>
				configuration file. Here is an example of an RTPFactory
				MBean with static NAT configuration:
			</para>
		</formalpara>

		<example
			id="ctms-Static_NAT_configuration_of_an_Announcement_Endpoint_in_jboss-service.xml">
			<title>
				Static NAT configuration of an Announcement Endpoint in
				jboss-service.xml
			</title>

			<programlisting linenumbering="unnumbered" role="XML">
				&lt;mbean
				code="org.mobicents.media.server.impl.jmx.rtp.RTPFactory"
				name="media.mobicents:service=RTPFactory,QID=1"&gt;
				&lt;attribute
				name="JndiName"&gt;java:media/mobicents/protocol/RTP&lt;/attribute&gt;
				&lt;attribute
				name="BindAddress"&gt;${jboss.bind.address}&lt;/attribute&gt;
				&lt;attribute name="Jitter"&gt;60&lt;/attribute&gt;
				&lt;attribute
				name="PacketizationPeriod"&gt;20&lt;/attribute&gt;
				&lt;attribute
				name="PortRange"&gt;1024-65535&lt;/attribute&gt;
				&lt;attribute name="AudioFormats"&gt; 8 = ALAW, 8000, 8,
				1; 0 = ULAW, 8000, 8, 1; 101 = telephone-event
				&lt;/attribute&gt;

				&lt;attribute name="UseStun"&gt;true&lt;/attribute&gt;
				&lt;attribute
				name="StunServerAddress"&gt;stun.ekiga.net&lt;/attribute&gt;
				&lt;attribute
				name="StunServerPort"&gt;3478&lt;/attribute&gt;
				&lt;attribute
				name="UsePortMapping"&gt;false&lt;/attribute&gt;
				&lt;/mbean&gt;
			</programlisting>
		</example>

		<para>
			There are four attributes related to STUN configuration:
		</para>

		<variablelist>
			<varlistentry>
				<term>UseStun</term>

				<listitem>
					<para>
						A boolean attribute which enables or disables
						STUN for the current endpoint.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>StunServerAddress</term>

				<listitem>
					<para>
						A string attribute; the address of a STUN
						server. In the
						<filename>jboss-service.xml</filename>
						configuration file example, this attribute is
						set to
						<ulink url="stun.ekiga.net"></ulink>
						.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>StunServerPort</term>

				<listitem>
					<para>
						A string attribute representing the port number
						of the STUN server.
						<filename>jboss-service.xml</filename>
						configuration file example, 3478 is the port of
						the Ekiga server.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>UsePortMapping</term>

				<listitem>
					<para>
						A boolean attribute that specifies whether the
						NAT is mapping the port numbers. A NAT is
						mapping ports if the internal and external ports
						are
						<emphasis>not</emphasis>
						guaranteed to be the same for every connection
						through the NAT. In other words, if the client
						established a connection with the NAT at the
						hypothetical address 111.111.111.111, on port
						1024, then the NAT will establish the second leg
						of the connection to some different (private)
						address, but on the same port, such as
						192.168.1.1:1024. If these ports are the same
						(1024), then your NAT is not mapping the ports,
						and you can set this attribute to false, which
						improves the performance of the NAT traversal by
						doing the STUN lookup only once at boot-time,
						instead of doing it every time a new connection
						is established. NATs that don't map ports are
						also known as static NATs.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
</chapter>
